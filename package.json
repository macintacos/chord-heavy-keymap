{
  "name": "chord-heavy-keymap",
  "displayName": "Chord Heavy",
  "description": "A keymap inspired by Spacemacs",
  "version": "1.4.7",
  "publisher": "vscode-macintacos",
  "repository": {
    "type": "git",
    "url": "https://github.com/macintacos/chord-heavy-keymap.git"
  },
  "engines": {
    "vscode": "^1.42.0"
  },
  "categories": [
    "Keymaps"
  ],
  "contributes": {
    "keybindings": [
      {
        "key": "tab",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.explorer'"
      },
      {
        "key": "shift+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.explorer'"
      },
      {
        "command": "--editor.action.rename",
        "key": "f2",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "--workbench.action.openRecent",
        "key": "ctrl+e",
        "mac": "cmd+e"
      },
      {
        "command": "-actions.find",
        "key": "ctrl+f",
        "mac": "cmd+f"
      },
      {
        "command": "-bookmarks.expandSelectionToNext",
        "key": "shift+alt+l",
        "when": "editorTextFocus"
      },
      {
        "command": "-code-runner.run",
        "key": "ctrl+alt+n"
      },
      {
        "command": "-code-runner.runByLanguage",
        "key": "ctrl+alt+j"
      },
      {
        "command": "-code-runner.runCustomCommand",
        "key": "ctrl+alt+k"
      },
      {
        "command": "-code-runner.stop",
        "key": "ctrl+alt+m"
      },
      {
        "key": "shift+ctrl+v",
        "mac": "shift+cmd+v",
        "command": "-confluence.showPreview",
        "when": "editorLangId == 'confluence'"
      },
      {
        "key": "ctrl+k v",
        "mac": "cmd+k v",
        "command": "-confluence.showPreviewToSide",
        "when": "editorLangId == 'confluence'"
      },
      {
        "command": "-copyFilePath",
        "key": "alt+ctrl+c",
        "mac": "alt+cmd+c",
        "when": "!editorFocus"
      },
      {
        "command": "-copyFilePath",
        "key": "shift+ctrl+c",
        "mac": "shift+cmd+c",
        "when": "!editorFocus"
      },
      {
        "command": "-copyRelativeFilePath",
        "key": "shift+alt+ctrl+c",
        "mac": "shift+alt+cmd+c",
        "when": "!editorFocus"
      },
      {
        "key": "shift+ctrl+v",
        "mac": "shift+cmd+v",
        "command": "-csv.preview",
        "when": "editorLangId == 'csv'"
      },
      {
        "key": "shift+ctrl+v",
        "mac": "shift+cmd+v",
        "command": "-csv.preview",
        "when": "editorLangId == 'tsv'"
      },
      {
        "key": "shift+ctrl+v",
        "mac": "shift+cmd+v",
        "command": "-csv.preview",
        "when": "editorLangId == 'csv (semicolon)'"
      },
      {
        "key": "shift+ctrl+v",
        "mac": "shift+cmd+v",
        "command": "-csv.preview",
        "when": "editorLangId == 'csv (pipe)'"
      },
      {
        "command": "-cursorDown",
        "key": "ctrl+n",
        "when": "textInputFocus"
      },
      {
        "command": "-cursorUp",
        "key": "ctrl+p",
        "when": "textInputFocus"
      },
      {
        "command": "-deleteAllLeft",
        "key": "ctrl+backspace",
        "mac": "cmd+backspace",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "command": "-deleteAllRight",
        "key": "ctrl+k",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "command": "-deleteLeft",
        "key": "ctrl+backspace",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "command": "-deleteRight",
        "key": "ctrl+d",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+k ctrl+c",
        "mac": "cmd+k cmd+c",
        "command": "-editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.addSelectionToNextFindMatch",
        "key": "ctrl+d",
        "mac": "cmd+d",
        "when": "editorFocus"
      },
      {
        "command": "-editor.action.changeAll",
        "key": "ctrl+f2",
        "mac": "cmd+f2",
        "when": "editorTextFocus && editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+c",
        "mac": "cmd+c",
        "command": "-editor.action.clipboardCopyAction",
        "when": "textInputFocus"
      },
      {
        "command": "-editor.action.codeAction",
        "key": "alt+ctrl+v",
        "mac": "alt+cmd+v",
        "when": "editorTextFocus"
      },
      {
        "command": "-editor.action.commentLine",
        "key": "ctrl+/",
        "mac": "cmd+/",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.copyLinesDownAction",
        "key": "ctrl+d",
        "mac": "cmd+d",
        "when": "editorTextFocus && !editorHasSelection && !editorReadonly"
      },
      {
        "command": "-editor.action.copyLinesDownAction",
        "key": "shift+alt+down",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.copyLinesUpAction",
        "key": "shift+alt+up",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.deleteLines",
        "key": "ctrl+backspace",
        "mac": "cmd+backspace",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.deleteLines",
        "key": "shift+ctrl+k",
        "mac": "shift+cmd+k",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.diffReview.next",
        "key": "f7",
        "when": "isInDiffEditor"
      },
      {
        "command": "-editor.action.diffReview.prev",
        "key": "shift+f7",
        "when": "isInDiffEditor"
      },
      {
        "command": "-editor.action.dirtydiff.next",
        "key": "alt+f3",
        "when": "editorTextFocus"
      },
      {
        "command": "-editor.action.dirtydiff.previous",
        "key": "shift+alt+f3",
        "when": "editorTextFocus"
      },
      {
        "command": "-editor.action.extensioneditor.showfind",
        "key": "ctrl+f",
        "mac": "cmd+f",
        "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
      },
      {
        "command": "-editor.action.formatDocument",
        "key": "alt+ctrl+l",
        "mac": "alt+cmd+l",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.formatSelection",
        "key": "alt+ctrl+l",
        "mac": "alt+cmd+l",
        "when": "editorHasDocumentFormattingProvider && editorHasSelection && editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.formatSelection",
        "key": "ctrl+k ctrl+f",
        "mac": "cmd+k cmd+f",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.goToDeclaration",
        "key": "ctrl+down",
        "mac": "cmd+down",
        "when": "editorHasDefinitionProvider && editorTextFocus"
      },
      {
        "command": "-editor.action.goToDeclaration",
        "key": "f4",
        "when": "editorHasDefinitionProvider && editorTextFocus"
      },
      {
        "command": "-editor.action.goToImplementation",
        "key": "ctrl+f12",
        "mac": "cmd+f12",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
      },
      {
        "command": "-editor.action.goToReferences",
        "key": "shift+f12",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
      },
      {
        "command": "-editor.action.indentLines",
        "key": "ctrl+]",
        "mac": "cmd+]",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.insertLineAfter",
        "key": "ctrl+enter",
        "mac": "cmd+enter",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.insertLineAfter",
        "key": "shift+ctrl+enter",
        "mac": "shift+cmd+enter",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible"
      },
      {
        "command": "-editor.action.insertLineBefore",
        "key": "alt+ctrl+enter",
        "mac": "alt+cmd+enter",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.joinLines",
        "key": "ctrl+j",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.joinLines",
        "key": "ctrl+shift+j",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.marker.next",
        "key": "alt+f8",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.marker.next",
        "key": "alt+f8",
        "when": "editorFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.marker.next",
        "key": "f2",
        "when": "editorFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.marker.nextInFiles",
        "key": "f8",
        "when": "editorFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.marker.prev",
        "key": "shift+alt+f8",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.marker.prev",
        "key": "shift+alt+f8",
        "when": "editorFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.marker.prev",
        "key": "shift+f2",
        "when": "editorFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.marker.prevInFiles",
        "key": "shift+f8",
        "when": "editorFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.moveLinesDownAction",
        "key": "alt+down",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.moveLinesUpAction",
        "key": "alt+up",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.nextMatchFindAction",
        "key": "f3",
        "when": "editorFocus"
      },
      {
        "command": "-editor.action.nextSelectionMatchFindAction",
        "key": "ctrl+f3",
        "mac": "cmd+f3",
        "when": "editorFocus"
      },
      {
        "command": "-editor.action.outdentLines",
        "key": "ctrl+[",
        "mac": "cmd+[",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.peekDefinition",
        "key": "alt+f12",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
      },
      {
        "command": "-editor.action.peekImplementation",
        "key": "shift+ctrl+f12",
        "mac": "shift+cmd+f12",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
      },
      {
        "command": "-editor.action.previewDeclaration",
        "key": "alt+space",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor"
      },
      {
        "command": "-editor.action.previousMatchFindAction",
        "key": "shift+ctrl+g",
        "mac": "shift+cmd+g",
        "when": "editorFocus"
      },
      {
        "command": "-editor.action.previousMatchFindAction",
        "key": "shift+f3",
        "when": "editorFocus"
      },
      {
        "command": "-editor.action.previousSelectionMatchFindAction",
        "key": "shift+ctrl+f3",
        "mac": "shift+cmd+f3",
        "when": "editorFocus"
      },
      {
        "command": "-editor.action.quickFix",
        "key": "alt+enter",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.refactor",
        "key": "ctrl+shift+r",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.referenceSearch.trigger",
        "key": "alt+ctrl+f7",
        "mac": "alt+cmd+f7",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor"
      },
      {
        "key": "ctrl+k ctrl+u",
        "mac": "cmd+k cmd+u",
        "command": "-editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.rename",
        "key": "f2",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.rename",
        "key": "shift+f6",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "-editor.action.revealDefinition",
        "key": "f12",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
      },
      {
        "command": "-editor.action.revealDefinitionAside",
        "key": "ctrl+k f12",
        "mac": "cmd+k f12",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
      },
      {
        "command": "-editor.action.showAccessibilityHelp",
        "key": "alt+f1",
        "when": "editorFocus"
      },
      {
        "command": "-editor.action.showContextMenu",
        "key": "shift+f10",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+k ctrl+i",
        "mac": "cmd+k cmd+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
      },
      {
        "command": "-editor.action.showHover",
        "key": "ctrl+j",
        "when": "editorTextFocus"
      },
      {
        "command": "-editor.action.smartSelect.grow",
        "key": "alt+up",
        "when": "editorTextFocus"
      },
      {
        "command": "-editor.action.smartSelect.shrink",
        "key": "alt+down",
        "when": "editorTextFocus"
      },
      {
        "command": "-editor.action.startFindReplaceAction",
        "key": "alt+ctrl+f",
        "mac": "alt+cmd+f"
      },
      {
        "command": "-editor.action.startFindReplaceAction",
        "key": "ctrl+r",
        "mac": "cmd+r"
      },
      {
        "command": "-editor.action.toggleWordWrap",
        "key": "alt+z"
      },
      {
        "command": "-editor.action.triggerSuggest",
        "key": "ctrl+space",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+k ctrl+x",
        "mac": "cmd+k cmd+x",
        "command": "-editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+c",
        "mac": "cmd+c",
        "command": "-editor.action.webvieweditor.copy",
        "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
      },
      {
        "command": "-editor.action.webvieweditor.showFind",
        "key": "ctrl+f",
        "mac": "cmd+f",
        "when": "!editorFocus && activeEditor == 'WebviewEditor'"
      },
      {
        "command": "-editor.action.wordHighlight.next",
        "key": "f7",
        "when": "editorTextFocus && hasWordHighlights"
      },
      {
        "command": "-editor.action.wordHighlight.prev",
        "key": "shift+f7",
        "when": "editorTextFocus && hasWordHighlights"
      },
      {
        "command": "-editor.debug.action.runToCursor",
        "key": "alt+f9",
        "when": "inDebugMode"
      },
      {
        "command": "-editor.debug.action.selectionToRepl",
        "key": "alt+f8",
        "when": "editorHasSelection && editorTextFocus"
      },
      {
        "command": "-editor.debug.action.toggleBreakpoint",
        "key": "ctrl+f8",
        "mac": "cmd+f8",
        "when": "editorTextFocus"
      },
      {
        "command": "-editor.debug.action.toggleBreakpoint",
        "key": "f9",
        "when": "editorTextFocus"
      },
      {
        "command": "-editor.debug.action.toggleInlineBreakpoint",
        "key": "shift+f9",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+k ctrl+0",
        "mac": "cmd+k cmd+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "command": "-editor.foldAll",
        "key": "shift+ctrl+-",
        "mac": "shift+cmd+-",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+k ctrl+/",
        "mac": "cmd+k cmd+/",
        "command": "-editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+8",
        "mac": "cmd+k cmd+8",
        "command": "-editor.foldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+1",
        "mac": "cmd+k cmd+1",
        "command": "-editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+2",
        "mac": "cmd+k cmd+2",
        "command": "-editor.foldLevel2",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+3",
        "mac": "cmd+k cmd+3",
        "command": "-editor.foldLevel3",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+4",
        "mac": "cmd+k cmd+4",
        "command": "-editor.foldLevel4",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+5",
        "mac": "cmd+k cmd+5",
        "command": "-editor.foldLevel5",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+6",
        "mac": "cmd+k cmd+6",
        "command": "-editor.foldLevel6",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+7",
        "mac": "cmd+k cmd+7",
        "command": "-editor.foldLevel7",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+[",
        "mac": "cmd+k cmd+[",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "command": "-editor.gotoNextSymbolFromResult",
        "key": "f12",
        "when": "hasSymbols"
      },
      {
        "key": "ctrl+k ctrl+l",
        "mac": "cmd+k cmd+l",
        "command": "-editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "command": "-editor.unfold",
        "key": "ctrl+=",
        "mac": "cmd+=",
        "when": "editorFocus"
      },
      {
        "command": "-editor.unfold",
        "key": "ctrl+numpad_add",
        "mac": "cmd+numpad_add",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+k ctrl+j",
        "mac": "cmd+k cmd+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+9",
        "mac": "cmd+k cmd+9",
        "command": "-editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+]",
        "mac": "cmd+k cmd+]",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "key": "shift+ctrl+v",
        "mac": "shift+cmd+v",
        "command": "-excel.preview",
        "when": "editorLangId == 'excel'"
      },
      {
        "key": "ctrl+c",
        "mac": "cmd+c",
        "command": "-execCopy"
      },
      {
        "command": "-expandLineSelection",
        "key": "ctrl+l",
        "mac": "cmd+l",
        "when": "textInputFocus"
      },
      {
        "command": "-extension.advancedNewFile",
        "key": "alt+ctrl+n",
        "mac": "alt+cmd+n"
      },
      {
        "key": "ctrl+shift+h",
        "command": "-extension.dash.emptySyntax",
        "when": "editorTextFocus"
      },
      {
        "command": "-extension.downloadSettings",
        "key": "shift+alt+d"
      },
      {
        "command": "-extension.node-debug.pickLoadedScript",
        "key": "ctrl+f4",
        "mac": "cmd+f4",
        "when": "debugType == 'node'"
      },
      {
        "command": "-extension.node-debug.pickLoadedScript",
        "key": "ctrl+f4",
        "mac": "cmd+f4",
        "when": "debugType == 'node2'"
      },
      {
        "command": "-extension.node-debug.pickLoadedScript",
        "key": "ctrl+f4",
        "mac": "cmd+f4",
        "when": "debugType == 'chrome'"
      },
      {
        "command": "-extension.node-debug.startWithStopOnEntry",
        "key": "f10",
        "when": "!inDebugMode && debugConfigurationType == 'node'"
      },
      {
        "command": "-extension.node-debug.startWithStopOnEntry",
        "key": "f11",
        "when": "!inDebugMode && debugConfigurationType == 'node'"
      },
      {
        "key": "ctrl+unknown",
        "mac": "cmd+unknown",
        "command": "-extension.openWith",
        "when": "editorTextFocus && editorLangId == 'html'"
      },
      {
        "key": "ctrl+k d",
        "mac": "cmd+k d",
        "command": "-extension.openWithDefault",
        "when": "editorTextFocus && editorLangId == 'html'"
      },
      {
        "command": "-extension.updateSettings",
        "key": "shift+alt+u"
      },
      {
        "key": "ctrl+c",
        "mac": "cmd+c",
        "command": "-filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
      },
      {
        "command": "-git.commitAll",
        "key": "ctrl+k",
        "mac": "cmd+k",
        "when": "!inDebugMode && !terminalFocus"
      },
      {
        "command": "-git.pushTo",
        "key": "shift+ctrl+k",
        "mac": "shift+cmd+k",
        "when": "!inDebugMode && !terminalFocus"
      },
      {
        "key": "ctrl+c",
        "mac": "cmd+c",
        "command": "-gitlens.views.compare.copy",
        "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.compare/"
      },
      {
        "key": "ctrl+c",
        "mac": "cmd+c",
        "command": "-gitlens.views.fileHistory.copy",
        "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.fileHistory/"
      },
      {
        "key": "ctrl+c",
        "mac": "cmd+c",
        "command": "-gitlens.views.lineHistory.copy",
        "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.lineHistory/"
      },
      {
        "key": "ctrl+c",
        "mac": "cmd+c",
        "command": "-gitlens.views.repositories.copy",
        "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.repositories/"
      },
      {
        "key": "ctrl+c",
        "mac": "cmd+c",
        "command": "-gitlens.views.search.copy",
        "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.search/"
      },
      {
        "command": "-goToNextReference",
        "key": "f12",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
      },
      {
        "command": "-goToNextReference",
        "key": "f4",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
      },
      {
        "command": "-goToPreviousReference",
        "key": "shift+f12",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
      },
      {
        "command": "-goToPreviousReference",
        "key": "shift+f4",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
      },
      {
        "key": "ctrl+c",
        "mac": "cmd+c",
        "command": "-keybindings.editor.copyKeybindingEntry",
        "when": "inKeybindings && keybindingFocus"
      },
      {
        "command": "-keybindings.editor.searchKeybindings",
        "key": "ctrl+f",
        "mac": "cmd+f",
        "when": "inKeybindings"
      },
      {
        "command": "-lineBreakInsert",
        "key": "ctrl+enter",
        "mac": "cmd+enter",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "-list.focusDown",
        "key": "ctrl+n",
        "when": "listFocus && !inputFocus"
      },
      {
        "command": "-list.focusUp",
        "key": "ctrl+p",
        "when": "listFocus && !inputFocus"
      },
      {
        "command": "-markdown-checkbox.markCheckbox",
        "key": "shift+ctrl+enter",
        "mac": "shift+cmd+enter",
        "when": "editorTextFocus"
      },
      {
        "command": "-markdown-preview-enhanced.openPreview",
        "key": "ctrl+k v",
        "mac": "cmd+k v",
        "when": "editorLangId == 'markdown'"
      },
      {
        "command": "-markdown.extension.onBackspaceKey",
        "key": "backspace",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "command": "-markdown.extension.onCopyLineDown",
        "key": "shift+alt+down",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "command": "-markdown.extension.onCopyLineUp",
        "key": "shift+alt+up",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "command": "-markdown.extension.onCtrlEnterKey",
        "key": "ctrl+enter",
        "mac": "cmd+enter",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "command": "-markdown.extension.onIndentLines",
        "key": "ctrl+]",
        "mac": "cmd+]",
        "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "command": "-markdown.extension.onMoveLineDown",
        "key": "alt+down",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "command": "-markdown.extension.onMoveLineUp",
        "key": "alt+up",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "command": "-markdown.extension.onOutdentLines",
        "key": "ctrl+[",
        "mac": "cmd+[",
        "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "command": "-markdown.extension.onShiftEnterKey",
        "key": "shift+enter",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "command": "-markdown.extension.togglePreview",
        "key": "ctrl+shift+v",
        "when": "!terminalFocus"
      },
      {
        "key": "shift+ctrl+v",
        "mac": "shift+cmd+v",
        "command": "-markdown.extension.togglePreview",
        "when": "!terminalFocus"
      },
      {
        "key": "ctrl+k v",
        "mac": "cmd+k v",
        "command": "-markdown.extension.togglePreviewToSide",
        "when": "!terminalFocus"
      },
      {
        "command": "-markdown.extension.togglePreviewToSide",
        "key": "ctrl+k v",
        "when": "!terminalFocus"
      },
      {
        "key": "shift+ctrl+v",
        "mac": "shift+cmd+v",
        "command": "-markdown.showPreview",
        "when": "editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+k v",
        "mac": "cmd+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "editorLangId == 'markdown'"
      },
      {
        "command": "-npm-script.rerun-last-script",
        "key": "ctrl+r r",
        "mac": "cmd+r r"
      },
      {
        "command": "-o.showOutput",
        "key": "shift+ctrl+f9",
        "mac": "shift+cmd+f9"
      },
      {
        "command": "-outline.focus",
        "key": "ctrl+7",
        "mac": "cmd+7"
      },
      {
        "key": "ctrl+c",
        "mac": "cmd+c",
        "command": "-problems.action.copy",
        "when": "problemFocus"
      },
      {
        "command": "-problems.action.focusFilter",
        "key": "ctrl+f",
        "mac": "cmd+f",
        "when": "problemsViewFocus"
      },
      {
        "command": "-projectManager.listProjects",
        "key": "alt+ctrl+p",
        "mac": "alt+cmd+p"
      },
      {
        "command": "-projects.open",
        "key": "alt+ctrl+p",
        "mac": "alt+cmd+p"
      },
      {
        "command": "-references-view.find",
        "key": "alt+f7",
        "when": "editorHasReferenceProvider"
      },
      {
        "command": "-references-view.find",
        "key": "shift+alt+f12",
        "when": "editorHasReferenceProvider"
      },
      {
        "command": "-references-view.next",
        "key": "f4",
        "when": "reference-list.hasResult"
      },
      {
        "command": "-references-view.prev",
        "key": "shift+f4",
        "when": "reference-list.hasResult"
      },
      {
        "key": "ctrl+c",
        "mac": "cmd+c",
        "command": "-remote.tunnel.copyAddressInline",
        "when": "tunnelViewFocus && tunnelType == 'Detected' || tunnelViewFocus && tunnelType == 'Forwarded'"
      },
      {
        "command": "-renameFile",
        "key": "shift+f6",
        "when": "explorerViewletVisible && filesExplorerFocus"
      },
      {
        "command": "-revealFileInOS",
        "key": "alt+ctrl+r",
        "mac": "alt+cmd+r",
        "when": "!editorFocus"
      },
      {
        "command": "-search.action.copyMatch",
        "key": "ctrl+c",
        "mac": "cmd+c",
        "when": "fileMatchOrMatchFocus"
      },
      {
        "command": "-search.action.focusNextSearchResult",
        "key": "f4",
        "when": "hasSearchResult"
      },
      {
        "command": "-search.action.focusPreviousSearchResult",
        "key": "shift+f4",
        "when": "hasSearchResult"
      },
      {
        "command": "-selectNextSuggestion",
        "key": "ctrl+n",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "command": "-selectPrevSuggestion",
        "key": "ctrl+p",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "command": "-settings.action.search",
        "key": "ctrl+f",
        "mac": "cmd+f",
        "when": "inSettingsEditor"
      },
      {
        "command": "-settings.action.showContextMenu",
        "key": "shift+f9",
        "when": "inSettingsEditor"
      },
      {
        "command": "-showNextParameterHint",
        "key": "ctrl+n",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
      },
      {
        "command": "-showNextParameterHint",
        "key": "ctrl+n",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
      },
      {
        "command": "-showPrevParameterHint",
        "key": "ctrl+p",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
      },
      {
        "command": "-showPrevParameterHint",
        "key": "ctrl+p",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
      },
      {
        "command": "-todo.toggleBox",
        "key": "ctrl+enter",
        "mac": "cmd+enter",
        "when": "editorTextFocus && editorLangId == 'todo'"
      },
      {
        "command": "-toggleFindRegex",
        "key": "alt+ctrl+r",
        "mac": "alt+cmd+r",
        "when": "editorFocus"
      },
      {
        "command": "-togglePeekWidgetFocus",
        "key": "ctrl+k f2",
        "mac": "cmd+k f2",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
      },
      {
        "command": "-toggleSearchRegex",
        "key": "alt+ctrl+r",
        "mac": "alt+cmd+r",
        "when": "searchViewletFocus && searchViewletVisible"
      },
      {
        "command": "-toggleSuggestionDetails",
        "key": "ctrl+space",
        "when": "suggestWidgetVisible && textInputFocus"
      },
      {
        "command": "-workbench.action.closeActiveEditor",
        "key": "ctrl+w",
        "mac": "cmd+w"
      },
      {
        "key": "ctrl+k ctrl+w",
        "mac": "cmd+k cmd+w",
        "command": "-workbench.action.closeAllEditors"
      },
      {
        "key": "ctrl+k shift+ctrl+w",
        "mac": "cmd+k shift+cmd+w",
        "command": "-workbench.action.closeAllGroups"
      },
      {
        "command": "-workbench.action.closeEditorsInGroup",
        "key": "ctrl+k w",
        "mac": "cmd+k w"
      },
      {
        "command": "-workbench.action.closeFolder",
        "key": "ctrl+k f",
        "mac": "cmd+k f"
      },
      {
        "command": "-workbench.action.closeGroup",
        "key": "ctrl+w",
        "mac": "cmd+w",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
      },
      {
        "command": "-workbench.action.closeOtherEditors",
        "key": "alt+ctrl+t",
        "mac": "alt+cmd+t"
      },
      {
        "key": "ctrl+k u",
        "mac": "cmd+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
      },
      {
        "command": "-workbench.action.closeWindow",
        "key": "ctrl+w",
        "mac": "cmd+w",
        "when": "!editorIsOpen && !multipleEditorGroups"
      },
      {
        "command": "-workbench.action.compareEditor.nextChange",
        "key": "alt+f5",
        "when": "textCompareEditorVisible"
      },
      {
        "command": "-workbench.action.compareEditor.nextChange",
        "key": "f7",
        "when": "textCompareEditorVisible"
      },
      {
        "command": "-workbench.action.compareEditor.previousChange",
        "key": "shift+alt+f5",
        "when": "textCompareEditorVisible"
      },
      {
        "command": "-workbench.action.compareEditor.previousChange",
        "key": "shift+f7",
        "when": "textCompareEditorVisible"
      },
      {
        "command": "-workbench.action.debug.continue",
        "key": "alt+ctrl+r",
        "mac": "alt+cmd+r",
        "when": "inDebugMode"
      },
      {
        "command": "-workbench.action.debug.continue",
        "key": "f5",
        "when": "inDebugMode"
      },
      {
        "command": "-workbench.action.debug.pause",
        "key": "f6",
        "when": "debugState == 'running'"
      },
      {
        "command": "-workbench.action.debug.restart",
        "key": "shift+ctrl+f5",
        "mac": "shift+cmd+f5",
        "when": "inDebugMode"
      },
      {
        "command": "-workbench.action.debug.run",
        "key": "ctrl+d",
        "when": "!inDebugMode && !terminalFocus"
      },
      {
        "command": "-workbench.action.debug.run",
        "key": "ctrl+f5"
      },
      {
        "command": "-workbench.action.debug.start",
        "key": "f5",
        "when": "!inDebugMode"
      },
      {
        "command": "-workbench.action.debug.stepInto",
        "key": "f11",
        "when": "debugState == 'stopped'"
      },
      {
        "command": "-workbench.action.debug.stepInto",
        "key": "f11",
        "when": "debugState != 'inactive'"
      },
      {
        "command": "-workbench.action.debug.stepInto",
        "key": "f7",
        "when": "inDebugMode"
      },
      {
        "command": "-workbench.action.debug.stepOut",
        "key": "shift+f11",
        "when": "debugState == 'stopped'"
      },
      {
        "command": "-workbench.action.debug.stepOut",
        "key": "shift+f8",
        "when": "inDebugMode"
      },
      {
        "command": "-workbench.action.debug.stepOver",
        "key": "f10",
        "when": "debugState == 'stopped'"
      },
      {
        "command": "-workbench.action.debug.stepOver",
        "key": "f8",
        "when": "inDebugMode"
      },
      {
        "command": "-workbench.action.debug.stop",
        "key": "shift+f5",
        "when": "inDebugMode"
      },
      {
        "command": "-workbench.action.editor.changeLanguageMode",
        "key": "ctrl+k m",
        "mac": "cmd+k m"
      },
      {
        "command": "-workbench.action.editor.nextChange",
        "key": "alt+f5",
        "when": "editorTextFocus"
      },
      {
        "command": "-workbench.action.editor.previousChange",
        "key": "shift+alt+f5",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+k p",
        "mac": "cmd+k p",
        "command": "-workbench.action.files.copyPathOfActiveFile"
      },
      {
        "command": "-workbench.action.files.newUntitledFile",
        "key": "ctrl+n",
        "mac": "cmd+n"
      },
      {
        "key": "ctrl+o",
        "mac": "cmd+o",
        "command": "-workbench.action.files.openFileFolder"
      },
      {
        "command": "-workbench.action.files.save",
        "key": "ctrl+s",
        "mac": "cmd+s"
      },
      {
        "command": "-workbench.action.files.saveAll",
        "key": "ctrl+s",
        "mac": "cmd+s"
      },
      {
        "command": "-workbench.action.files.saveWithoutFormatting",
        "key": "ctrl+k s",
        "mac": "cmd+k s"
      },
      {
        "key": "ctrl+k o",
        "mac": "cmd+k o",
        "command": "-workbench.action.files.showOpenedFileInNewWindow"
      },
      {
        "command": "-workbench.action.findInFiles",
        "key": "shift+ctrl+f",
        "mac": "shift+cmd+f"
      },
      {
        "command": "-workbench.action.focusAboveGroup",
        "key": "ctrl+k ctrl+up",
        "mac": "cmd+k cmd+up"
      },
      {
        "command": "-workbench.action.focusBelowGroup",
        "key": "ctrl+k ctrl+down",
        "mac": "cmd+k cmd+down"
      },
      {
        "command": "-workbench.action.focusFirstEditorGroup",
        "key": "ctrl+1",
        "mac": "cmd+1"
      },
      {
        "command": "-workbench.action.focusNextGroup",
        "key": "alt+tab",
        "when": "editorFocus"
      },
      {
        "command": "-workbench.action.focusPreviousGroup",
        "key": "shift+alt+tab",
        "when": "editorFocus"
      },
      {
        "command": "-workbench.action.gotoLine",
        "key": "ctrl+l",
        "mac": "cmd+l"
      },
      {
        "command": "-workbench.action.gotoSymbol",
        "key": "alt+ctrl+o",
        "mac": "alt+cmd+o"
      },
      {
        "command": "-workbench.action.gotoSymbol",
        "key": "ctrl+f12",
        "mac": "cmd+f12",
        "when": "editorTextFocus"
      },
      {
        "command": "-workbench.action.gotoSymbol",
        "key": "shift+ctrl+o",
        "mac": "shift+cmd+o"
      },
      {
        "command": "-workbench.action.keybindingsReference",
        "key": "ctrl+k ctrl+r",
        "mac": "cmd+k cmd+r"
      },
      {
        "command": "-workbench.action.lastEditorInGroup",
        "key": "ctrl+9",
        "mac": "cmd+9"
      },
      {
        "command": "-workbench.action.lastEditorInGroup",
        "key": "ctrl+0"
      },
      {
        "command": "-workbench.action.maximizeEditor",
        "key": "shift+ctrl+f12",
        "mac": "shift+cmd+f12"
      },
      {
        "key": "ctrl+k down",
        "mac": "cmd+k down",
        "command": "-workbench.action.moveActiveEditorGroupDown"
      },
      {
        "key": "ctrl+k left",
        "mac": "cmd+k left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
      },
      {
        "key": "ctrl+k right",
        "mac": "cmd+k right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
      },
      {
        "key": "ctrl+k up",
        "mac": "cmd+k up",
        "command": "-workbench.action.moveActiveEditorGroupUp"
      },
      {
        "key": "ctrl+k ctrl+alt+left",
        "mac": "cmd+k shift+cmd+left",
        "command": "-workbench.action.moveEditorLeftInGroup"
      },
      {
        "key": "ctrl+k ctrl+alt+right",
        "mac": "cmd+k shift+cmd+right",
        "command": "-workbench.action.moveEditorRightInGroup"
      },
      {
        "command": "-workbench.action.navigateBack",
        "key": "ctrl+[",
        "mac": "cmd+["
      },
      {
        "command": "-workbench.action.navigateForward",
        "key": "ctrl+]",
        "mac": "cmd+]"
      },
      {
        "key": "ctrl+k ctrl+q",
        "mac": "cmd+k cmd+q",
        "command": "-workbench.action.navigateToLastEditLocation"
      },
      {
        "command": "-workbench.action.newWindow",
        "key": "shift+ctrl+n",
        "mac": "shift+cmd+n"
      },
      {
        "command": "-workbench.action.nextEditor",
        "key": "alt+ctrl+right",
        "mac": "alt+cmd+right"
      },
      {
        "command": "-workbench.action.nextEditor",
        "key": "ctrl+right"
      },
      {
        "command": "-workbench.action.nextEditor",
        "key": "shift+ctrl+]",
        "mac": "shift+cmd+]"
      },
      {
        "key": "ctrl+k ctrl+alt+right",
        "mac": "cmd+k alt+cmd+right",
        "command": "-workbench.action.nextEditorInGroup"
      },
      {
        "command": "-workbench.action.openGlobalKeybindings",
        "key": "ctrl+k ctrl+s",
        "mac": "cmd+k cmd+s"
      },
      {
        "command": "-workbench.action.openGlobalSettings",
        "key": "ctrl+,",
        "mac": "cmd+,"
      },
      {
        "command": "-workbench.action.openRecent",
        "key": "ctrl+e",
        "mac": "cmd+e"
      },
      {
        "command": "-workbench.action.openRecent",
        "key": "ctrl+f e",
        "mac": "cmd+f e"
      },
      {
        "command": "-workbench.action.output.toggleOutput",
        "key": "shift+ctrl+u",
        "mac": "shift+cmd+u"
      },
      {
        "command": "-workbench.action.previousEditor",
        "key": "alt+ctrl+left",
        "mac": "alt+cmd+left"
      },
      {
        "command": "-workbench.action.previousEditor",
        "key": "ctrl+left"
      },
      {
        "command": "-workbench.action.previousEditor",
        "key": "shift+ctrl+[",
        "mac": "shift+cmd+["
      },
      {
        "key": "ctrl+k ctrl+alt+left",
        "mac": "cmd+k alt+cmd+left",
        "command": "-workbench.action.previousEditorInGroup"
      },
      {
        "command": "-workbench.action.quickOpen",
        "key": "ctrl+p",
        "mac": "cmd+p"
      },
      {
        "command": "-workbench.action.quickOpen",
        "key": "shift+ctrl+o",
        "mac": "shift+cmd+o"
      },
      {
        "command": "-workbench.action.quickOpenSelectNext",
        "key": "ctrl+n",
        "when": "inQuickOpen"
      },
      {
        "command": "-workbench.action.quickOpenSelectNext",
        "key": "ctrl+n",
        "when": "neovim.mode == 'cmdline_normal'"
      },
      {
        "command": "-workbench.action.quickOpenSelectPrevious",
        "key": "ctrl+p",
        "when": "inQuickOpen"
      },
      {
        "command": "-workbench.action.quickOpenSelectPrevious",
        "key": "ctrl+p",
        "when": "neovim.mode == 'cmdline_normal'"
      },
      {
        "command": "-workbench.action.quit",
        "key": "ctrl+q",
        "mac": "cmd+q"
      },
      {
        "command": "-workbench.action.reopenClosedEditor",
        "key": "shift+ctrl+t",
        "mac": "shift+cmd+t"
      },
      {
        "command": "-workbench.action.replaceInFiles",
        "key": "shift+ctrl+h",
        "mac": "shift+cmd+h"
      },
      {
        "command": "-workbench.action.replaceInFiles",
        "key": "shift+ctrl+r",
        "mac": "shift+cmd+r"
      },
      {
        "command": "-workbench.action.selectTheme",
        "key": "ctrl+k ctrl+t",
        "mac": "cmd+k cmd+t"
      },
      {
        "command": "-workbench.action.selectTheme",
        "key": "ctrl+`"
      },
      {
        "command": "-workbench.action.showAllSymbols",
        "key": "ctrl+o",
        "mac": "cmd+o"
      },
      {
        "command": "-workbench.action.showAllSymbols",
        "key": "ctrl+t",
        "mac": "cmd+t"
      },
      {
        "command": "-workbench.action.showCommands",
        "key": "f1"
      },
      {
        "command": "-workbench.action.showCommands",
        "key": "shift+ctrl+a",
        "mac": "shift+cmd+a"
      },
      {
        "command": "-workbench.action.showCommands",
        "key": "shift+ctrl+p",
        "mac": "shift+cmd+p"
      },
      {
        "command": "-workbench.action.showErrorsWarnings",
        "key": "ctrl+f1",
        "mac": "cmd+f1",
        "when": "editorTextFocus"
      },
      {
        "command": "-workbench.action.splitEditor",
        "key": "ctrl+\\",
        "mac": "cmd+\\"
      },
      {
        "command": "-workbench.action.splitEditorOrthogonal",
        "key": "ctrl+k ctrl+\\",
        "mac": "cmd+k cmd+\\"
      },
      {
        "command": "-workbench.action.tasks.build",
        "key": "ctrl+f9",
        "mac": "cmd+f9"
      },
      {
        "key": "ctrl+k",
        "mac": "cmd+k",
        "command": "-workbench.action.terminal.clear",
        "when": "terminalFocus"
      },
      {
        "key": "ctrl+c",
        "mac": "cmd+c",
        "command": "-workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalTextSelected"
      },
      {
        "command": "-workbench.action.terminal.findNext",
        "key": "f3",
        "when": "terminalFocus"
      },
      {
        "command": "-workbench.action.terminal.findNext",
        "key": "f3",
        "when": "terminalFindWidgetFocused"
      },
      {
        "command": "-workbench.action.terminal.findPrevious",
        "key": "shift+f3",
        "when": "terminalFocus"
      },
      {
        "command": "-workbench.action.terminal.findPrevious",
        "key": "shift+f3",
        "when": "terminalFindWidgetFocused"
      },
      {
        "command": "-workbench.action.terminal.focus",
        "key": "alt+f12",
        "when": "!terminalFocus"
      },
      {
        "command": "-workbench.action.terminal.focusFindWidget",
        "key": "ctrl+f",
        "mac": "cmd+f",
        "when": "terminalFocus"
      },
      {
        "command": "-workbench.action.terminal.focusFindWidget",
        "key": "ctrl+f",
        "mac": "cmd+f",
        "when": "terminalFindWidgetFocused"
      },
      {
        "command": "-workbench.action.terminal.resizePaneLeft",
        "key": "ctrl+alt+left",
        "mac": "ctrl+cmd+left",
        "when": "terminalFocus"
      },
      {
        "command": "-workbench.action.terminal.split",
        "key": "ctrl+\\",
        "mac": "cmd+\\",
        "when": "terminalFocus"
      },
      {
        "command": "-workbench.action.terminal.toggleFindRegex",
        "key": "alt+ctrl+r",
        "mac": "alt+cmd+r",
        "when": "terminalFindWidgetFocused"
      },
      {
        "command": "-workbench.action.terminal.toggleFindRegex",
        "key": "alt+ctrl+r",
        "mac": "alt+cmd+r",
        "when": "terminalFocus"
      },
      {
        "command": "-workbench.action.terminal.toggleTerminal",
        "key": "alt+f12",
        "when": "terminalFocus"
      },
      {
        "command": "-workbench.action.terminal.toggleTerminal",
        "key": "ctrl+`"
      },
      {
        "key": "ctrl+alt+f",
        "mac": "ctrl+cmd+f",
        "command": "-workbench.action.toggleFullScreen"
      },
      {
        "command": "-workbench.action.togglePanel",
        "key": "ctrl+j",
        "mac": "cmd+j"
      },
      {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "ctrl+1",
        "mac": "cmd+1",
        "when": "!editorFocus"
      },
      {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "ctrl+3",
        "mac": "cmd+3",
        "when": "searchViewletVisible"
      },
      {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "ctrl+5",
        "mac": "cmd+5",
        "when": "!editorFocus"
      },
      {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "ctrl+9",
        "mac": "cmd+9",
        "when": "!editorFocus"
      },
      {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "ctrl+b",
        "mac": "cmd+b"
      },
      {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "ctrl+numpad1",
        "mac": "cmd+numpad1",
        "when": "!editorFocus"
      },
      {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "ctrl+numpad3",
        "mac": "cmd+numpad3",
        "when": "searchViewletVisible"
      },
      {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "ctrl+numpad5",
        "mac": "cmd+numpad5",
        "when": "!editorFocus"
      },
      {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "ctrl+numpad9",
        "mac": "cmd+numpad9",
        "when": "!editorFocus"
      },
      {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "shift+escape",
        "when": "!editorFocus && !inDebugRepl && !problemFocus && !terminalFocus"
      },
      {
        "key": "ctrl+k z",
        "mac": "cmd+k z",
        "command": "-workbench.action.toggleZenMode"
      },
      {
        "command": "-workbench.action.zoomIn",
        "key": "ctrl+=",
        "mac": "cmd+="
      },
      {
        "command": "-workbench.action.zoomIn",
        "key": "ctrl+numpad_add",
        "mac": "cmd+numpad_add"
      },
      {
        "command": "-workbench.actions.view.problems",
        "key": "ctrl+0",
        "mac": "cmd+0"
      },
      {
        "command": "-workbench.actions.view.problems",
        "key": "ctrl+numpad0",
        "mac": "cmd+numpad0"
      },
      {
        "command": "-workbench.actions.view.problems",
        "key": "shift+ctrl+m",
        "mac": "shift+cmd+m"
      },
      {
        "command": "-workbench.debug.action.toggleRepl",
        "key": "alt+f8"
      },
      {
        "command": "-workbench.debug.action.toggleRepl",
        "key": "shift+ctrl+y",
        "mac": "shift+cmd+y"
      },
      {
        "command": "-workbench.extensions.action.showRecommendedKeymapExtensions",
        "key": "ctrl+k ctrl+m",
        "mac": "cmd+k cmd+m"
      },
      {
        "key": "ctrl+k c",
        "mac": "cmd+k c",
        "command": "-workbench.files.action.compareWithClipboard"
      },
      {
        "key": "ctrl+k d",
        "mac": "cmd+k d",
        "command": "-workbench.files.action.compareWithSaved"
      },
      {
        "command": "-workbench.files.action.focusOpenEditorsView",
        "key": "ctrl+k e",
        "mac": "cmd+k e",
        "when": "workbench.explorer.openEditorsView.active"
      },
      {
        "command": "-workbench.view.debug",
        "key": "shift+ctrl+d",
        "mac": "shift+cmd+d"
      },
      {
        "command": "-workbench.view.debug",
        "key": "shift+ctrl+f8",
        "mac": "shift+cmd+f8"
      },
      {
        "command": "-workbench.view.explorer",
        "key": "ctrl+1",
        "mac": "cmd+1",
        "when": "editorFocus"
      },
      {
        "command": "-workbench.view.explorer",
        "key": "shift+ctrl+e",
        "mac": "shift+cmd+e"
      },
      {
        "command": "-workbench.view.extensions",
        "key": "shift+ctrl+x",
        "mac": "shift+cmd+x"
      },
      {
        "command": "-workbench.view.scm",
        "key": "ctrl+9",
        "mac": "cmd+9",
        "when": "editorFocus"
      },
      {
        "command": "-workbench.view.scm",
        "key": "ctrl+shift+g"
      },
      {
        "command": "-workbench.view.scm",
        "key": "ctrl+v"
      },
      {
        "command": "-workbench.view.search",
        "key": "ctrl+numpad3",
        "mac": "cmd+numpad3",
        "when": "!searchViewletVisible"
      },
      {
        "command": "-workbench.view.search",
        "key": "shift+ctrl+f",
        "mac": "shift+cmd+f",
        "when": "!searchViewletVisible"
      },
      {
        "command": "actions.find",
        "key": "ctrl+s f",
        "mac": "cmd+s f"
      },
      {
        "command": "code-runner.run",
        "key": "ctrl+c r",
        "mac": "cmd+c r"
      },
      {
        "key": "ctrl+q c",
        "mac": "cmd+q c",
        "command": "code-runner.stop"
      },
      {
        "key": "ctrl+o v",
        "mac": "cmd+o v",
        "command": "confluence.showPreview",
        "when": "editorLangId == 'confluence'"
      },
      {
        "key": "ctrl+o v",
        "mac": "cmd+o v",
        "command": "confluence.showPreviewToSide",
        "when": "editorLangId == 'confluence'"
      },
      {
        "command": "copyFilePath",
        "key": "linux+f y",
        "mac": "cmd+f y",
        "when": "editorFocus"
      },
      {
        "command": "copyFilePath",
        "key": "ctrl+y p",
        "mac": "cmd+y p",
        "when": "editorFocus"
      },
      {
        "command": "copyRelativeFilePath",
        "key": "ctrl+y shift+p",
        "mac": "cmd+y shift+p",
        "when": "!editorFocus"
      },
      {
        "key": "linux+o v",
        "mac": "cmd+o v",
        "command": "csv.preview",
        "when": "editorLangId == 'csv'"
      },
      {
        "key": "ctrl+o v",
        "mac": "cmd+o v",
        "command": "csv.preview",
        "when": "editorLangId == 'tsv'"
      },
      {
        "key": "ctrl+o v",
        "mac": "cmd+o v",
        "command": "csv.preview",
        "when": "editorLangId == 'csv (semicolon)'"
      },
      {
        "key": "ctrl+o v",
        "mac": "cmd+o v",
        "command": "csv.preview",
        "when": "editorLangId == 'csv (pipe)'"
      },
      {
        "key": "ctrl+shift+k",
        "mac": "ctrl+shift+k",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult && searchViewletVisible"
      },
      {
        "key": "ctrl+shift+j",
        "mac": "ctrl+shift+j",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult && searchViewletVisible"
      },
      {
        "command": "cursorDown",
        "key": "ctrl+j",
        "mac": "ctrl+j",
        "when": "textInputFocus"
      },
      {
        "key": "down",
        "mac": "down",
        "command": "cursorDown",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Insert' && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
      },
      {
        "command": "cursorLeft",
        "key": "ctrl+h",
        "mac": "ctrl+h",
        "when": "textInputFocus"
      },
      {
        "command": "cursorRight",
        "key": "ctrl+l",
        "mac": "ctrl+l",
        "when": "textInputFocus"
      },
      {
        "command": "cursorUp",
        "key": "ctrl+k",
        "mac": "ctrl+k",
        "when": "textInputFocus"
      },
      {
        "command": "cursorUp",
        "key": "up",
        "mac": "up",
        "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
      },
      {
        "key": "up",
        "mac": "up",
        "command": "cursorUp",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Insert' && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
      },
      {
        "command": "cursorWordPartRight",
        "key": "ctrl+alt+right",
        "mac": "ctrl+alt+right",
        "when": "textInputFocus"
      },
      {
        "command": "cursorWordPartRightSelect",
        "key": "ctrl+shift+alt+right",
        "mac": "ctrl+shift+alt+right",
        "when": "textInputFocus"
      },
      {
        "command": "cursorWordPartStartLeft",
        "key": "ctrl+alt+left",
        "mac": "ctrl+alt+left",
        "when": "textInputFocus"
      },
      {
        "command": "cursorWordPartStartLeftSelect",
        "key": "ctrl+shift+alt+left",
        "mac": "ctrl+shift+alt+left",
        "when": "textInputFocus"
      },
      {
        "command": "deleteAllLeft",
        "key": "ctrl+backspace",
        "mac": "cmd+backspace"
      },
      {
        "command": "deleteWordPartLeft",
        "key": "ctrl+alt+backspace",
        "mac": "ctrl+alt+backspace",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "command": "deleteWordPartRight",
        "key": "ctrl+shift+alt+backspace",
        "mac": "ctrl+shift+alt+backspace",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "command": "editor.action.addSelectionToNextFindMatch",
        "key": "alt+l",
        "mac": "alt+l",
        "when": "editorFocus"
      },
      {
        "command": "editor.action.commentLine",
        "key": "ctrl+; ;",
        "mac": "cmd+; ;",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "editor.action.commentLine",
        "key": "ctrl+c l",
        "mac": "cmd+c l",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "editor.action.copyLinesDownAction",
        "key": "ctrl+y j",
        "mac": "cmd+y j",
        "when": "editorTextFocus && !editorHasSelection && !editorReadonly"
      },
      {
        "command": "editor.action.copyLinesDownAction",
        "key": "ctrl+y j",
        "mac": "cmd+y j",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "editor.action.copyLinesUpAction",
        "key": "ctrl+y k",
        "mac": "cmd+y k",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "editor.action.deleteLines",
        "key": "shift+ctrl+backspace",
        "mac": "shift+cmd+backspace",
        "when": "editorFocus"
      },
      {
        "command": "editor.action.extensioneditor.showfind",
        "key": "ctrl+s f",
        "mac": "cmd+s f",
        "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
      },
      {
        "command": "editor.action.fontZoomIn",
        "key": "ctrl+numpad_add",
        "mac": "cmd+numpad_add"
      },
      {
        "command": "editor.action.fontZoomOut",
        "key": "ctrl+-",
        "mac": "cmd+-"
      },
      {
        "command": "editor.action.fontZoomReset",
        "key": "ctrl+=",
        "mac": "cmd+="
      },
      {
        "command": "editor.action.formatDocument",
        "key": "ctrl+f =",
        "mac": "cmd+f =",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "editor.action.formatSelection",
        "key": "ctrl+f =",
        "mac": "cmd+f =",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "editor.action.formatSelection",
        "key": "ctrl+j =",
        "mac": "cmd+j =",
        "when": "editorHasDocumentFormattingProvider && editorHasSelection && editorTextFocus && !editorReadonly"
      },
      {
        "args": {
          "langId": "markdown",
          "name": "insertLink"
        },
        "command": "editor.action.insertSnippet",
        "key": "ctrl+k",
        "mac": "cmd+k",
        "when": "editorTextFocus && editorLangId == 'markdown'"
      },
      {
        "command": "editor.action.marker.next",
        "key": "ctrl+e n",
        "mac": "cmd+e n",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "editor.action.marker.next",
        "key": "ctrl+e n",
        "mac": "cmd+e n",
        "when": "editorFocus && !editorReadonly"
      },
      {
        "command": "editor.action.marker.nextInFiles",
        "key": "ctrl+e n",
        "mac": "cmd+e n",
        "when": "editorFocus && !editorReadonly"
      },
      {
        "command": "editor.action.marker.prev",
        "key": "ctrl+e p",
        "mac": "cmd+e p",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "editor.action.marker.prev",
        "key": "ctrl+e p",
        "mac": "cmd+e p",
        "when": "editorFocus && !editorReadonly"
      },
      {
        "command": "editor.action.marker.prevInFiles",
        "key": "ctrl+e p",
        "mac": "cmd+e p",
        "when": "editorFocus && !editorReadonly"
      },
      {
        "command": "editor.action.peekDefinition",
        "key": "alt+enter",
        "mac": "alt+enter",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
      },
      {
        "command": "editor.action.refactor",
        "key": "ctrl+r r",
        "mac": "cmd+r r",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      },
      {
        "command": "editor.action.startFindReplaceAction",
        "key": "ctrl+s r",
        "mac": "cmd+s r",
        "when": "editorTextFocus"
      },
      {
        "command": "editor.action.startFindReplaceAction",
        "key": "ctrl+f r",
        "mac": "cmd+f r",
        "when": "editorTextFocus"
      },
      {
        "command": "editor.action.toggleWordWrap",
        "key": "ctrl+t w",
        "mac": "cmd+t w"
      },
      {
        "command": "editor.action.triggerSuggest",
        "key": "alt+space",
        "mac": "alt+space",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
      },
      {
        "command": "editor.action.webvieweditor.showFind",
        "key": "ctrl+s f",
        "mac": "cmd+s f",
        "when": "!editorFocus && activeEditor == 'WebviewEditor'"
      },
      {
        "command": "editor.debug.action.goToNextBreakpoint",
        "key": "ctrl+d c",
        "mac": "cmd+d c"
      },
      {
        "command": "editor.debug.action.toggleBreakpoint",
        "key": "ctrl+d t",
        "mac": "cmd+d t",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+o v",
        "mac": "cmd+o v",
        "command": "excel.preview",
        "when": "editorLangId == 'excel'"
      },
      {
        "command": "expand_region",
        "key": "alt+up",
        "mac": "alt+up"
      },
      {
        "command": "extension.aceJump",
        "key": "ctrl+j j",
        "mac": "cmd+j j"
      },
      {
        "command": "extension.advancedNewFile",
        "key": "ctrl+f n",
        "mac": "cmd+f n"
      },
      {
        "command": "extension.jumpy-exit",
        "key": "Escape",
        "mac": "Escape",
        "when": "editorTextFocus && jumpy.isJumpyMode"
      },
      {
        "command": "extension.jumpy-line",
        "key": "shift+alt+enter",
        "mac": "shift+alt+enter",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+o b",
        "mac": "cmd+o b",
        "command": "extension.openWithDefault",
        "when": "editorTextFocus && editorLangId == 'html'"
      },
      {
        "command": "extension.toggleTheme",
        "key": "shift+alt+d",
        "mac": "shift+alt+d"
      },
      {
        "command": "fileutils.copyFileName",
        "key": "ctrl+y n",
        "mac": "cmd+y n",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+f shift+n",
        "mac": "cmd+f shift+n",
        "command": "fileutils.newFolderAtRoot"
      },
      {
        "command": "fileutils.renameFile",
        "key": "ctrl+f ctrl+r",
        "mac": "cmd+f cmd+r"
      },
      {
        "command": "git-graph.view",
        "key": "ctrl+g g",
        "mac": "cmd+g g"
      },
      {
        "command": "git.branch",
        "key": "ctrl+g shift+b",
        "mac": "cmd+g shift+b"
      },
      {
        "command": "git.checkout",
        "key": "ctrl+g b",
        "mac": "cmd+g b"
      },
      {
        "command": "git.init",
        "key": "ctrl+g i",
        "mac": "cmd+g i"
      },
      {
        "command": "git.pull",
        "key": "ctrl+g l",
        "mac": "cmd+g l"
      },
      {
        "command": "git.pushTo",
        "key": "ctrl+g p",
        "mac": "cmd+g p",
        "when": "!inDebugMode && !terminalFocus"
      },
      {
        "command": "git.stageAll",
        "key": "ctrl+g shift+a",
        "mac": "cmd+g shift+a"
      },
      {
        "command": "git.stageAllTracked",
        "key": "ctrl+g a",
        "mac": "cmd+g a"
      },
      {
        "command": "go.godoctor.extract",
        "key": "ctrl+r m",
        "mac": "cmd+r m",
        "when": "editorLangId == 'go'"
      },
      {
        "command": "go.godoctor.var",
        "key": "ctrl+r v",
        "mac": "cmd+r v",
        "when": "editorLangId == go"
      },
      {
        "command": "keybindings.editor.searchKeybindings",
        "key": "ctrl+s f",
        "mac": "cmd+s f",
        "when": "inKeybindings"
      },
      {
        "command": "list.focusDown",
        "key": "ctrl+j",
        "mac": "ctrl+j",
        "when": "listFocus && !inputFocus"
      },
      {
        "command": "list.focusUp",
        "key": "ctrl+k",
        "mac": "ctrl+k",
        "when": "listFocus && !inputFocus"
      },
      {
        "command": "markdown-checkbox.markCheckbox",
        "key": "alt+enter",
        "mac": "alt+enter",
        "when": "editorTextFocus"
      },
      {
        "command": "markdown.extension.onCopyLineDown",
        "key": "ctrl+y j",
        "mac": "cmd+y j",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "command": "markdown.extension.onCopyLineUp",
        "key": "ctrl+y k",
        "mac": "cmd+y k",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+o v",
        "mac": "cmd+o v",
        "command": "markdown.showPreview",
        "when": "editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+o v",
        "mac": "cmd+o v",
        "command": "markdown.showPreviewToSide",
        "when": "editorLangId == 'markdown'"
      },
      {
        "command": "multiCommand.closePanelAndSidebarAndOtherEditors",
        "key": "ctrl+w m",
        "mac": "cmd+w m"
      },
      {
        "command": "multiCommand.repeatLastCommand",
        "key": "ctrl+alt+r",
        "mac": "cmd+ctrl+r"
      },
      {
        "command": "outline.focus",
        "key": "ctrl+f o",
        "mac": "cmd+f o"
      },
      {
        "command": "problems.action.focusFilter",
        "key": "ctrl+s f",
        "mac": "cmd+s f",
        "when": "problemsViewFocus"
      },
      {
        "command": "projectManager.editProjects",
        "key": "ctrl+p e",
        "mac": "cmd+p e"
      },
      {
        "command": "projectManager.listProjects",
        "key": "ctrl+p p",
        "mac": "cmd+p p"
      },
      {
        "command": "projectManager.listProjectsNewWindow",
        "key": "ctrl+p shift+p",
        "mac": "cmd+p shift+p"
      },
      {
        "command": "projectManager.renameProject",
        "key": "ctrl+p r",
        "mac": "cmd+p r"
      },
      {
        "command": "projectManager.saveProject",
        "key": "ctrl+p c",
        "mac": "cmd+p c"
      },
      {
        "command": "python.refactorExtractMethod",
        "key": "ctrl+r m",
        "mac": "cmd+r m",
        "when": "editorLangId == python"
      },
      {
        "command": "python.refactorExtractVariable",
        "key": "ctrl+r v",
        "mac": "cmd+r v",
        "when": "editorLangId == python"
      },
      {
        "command": "selectNextSuggestion",
        "key": "ctrl+j",
        "mac": "ctrl+j",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "command": "selectPrevSuggestion",
        "key": "ctrl+k",
        "mac": "ctrl+k",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "command": "settings.action.search",
        "key": "ctrl+s f",
        "mac": "cmd+s f",
        "when": "inSettingsEditor"
      },
      {
        "command": "settings.cycle.lineNumbers",
        "key": "ctrl+t l",
        "mac": "cmd+t l"
      },
      {
        "command": "toggleSearchRegex",
        "key": "ctrl+f r",
        "mac": "cmd+f r",
        "when": "searchViewletFocus && searchViewletVisible"
      },
      {
        "command": "toggleSuggestionDetails",
        "key": "alt+space",
        "mac": "alt+space",
        "when": "suggestWidgetVisible && textInputFocus"
      },
      {
        "command": "toggleVim",
        "key": "ctrl+t v",
        "mac": "cmd+t v"
      },
      {
        "command": "undo_expand_region",
        "key": "alt+down",
        "mac": "alt+down",
        "when": "editorTextFocus && editorHasSelection"
      },
      {
        "args": "j",
        "command": "vscode-neovim.compositeEscape1",
        "key": "j",
        "mac": "j",
        "when": "neovim.mode == insert"
      },
      {
        "command": "workbench.action.closeActiveEditor",
        "key": "ctrl+b d",
        "mac": "cmd+b d"
      },
      {
        "key": "ctrl+q a",
        "mac": "cmd+q a",
        "command": "workbench.action.closeAllEditors"
      },
      {
        "key": "ctrl+w shift+d",
        "mac": "cmd+w shift+d",
        "command": "workbench.action.closeAllGroups"
      },
      {
        "key": "ctrl+q shift+a",
        "mac": "cmd+q shift+a",
        "command": "workbench.action.closeEditorInAllGroups"
      },
      {
        "command": "workbench.action.closeEditorsInGroup",
        "key": "ctrl+w d",
        "mac": "cmd+w d"
      },
      {
        "command": "workbench.action.closeEditorsInGroup",
        "key": "ctrl+w x",
        "mac": "cmd+w x"
      },
      {
        "key": "ctrl+q shift+o",
        "mac": "cmd+q shift+o",
        "command": "workbench.action.closeEditorsInOtherGroups"
      },
      {
        "key": "ctrl+q left",
        "mac": "cmd+q left",
        "command": "workbench.action.closeEditorsToTheLeft"
      },
      {
        "key": "ctrl+q right",
        "mac": "cmd+q right",
        "command": "workbench.action.closeEditorsToTheRight"
      },
      {
        "key": "ctrl+q w",
        "mac": "cmd+q w",
        "command": "workbench.action.closeFolder"
      },
      {
        "command": "workbench.action.closeGroup",
        "key": "ctrl+w d",
        "mac": "cmd+w d",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
      },
      {
        "key": "ctrl+q o",
        "mac": "cmd+q o",
        "command": "workbench.action.closeOtherEditors"
      },
      {
        "command": "workbench.action.closePanel",
        "key": "ctrl+e l",
        "mac": "cmd+e l",
        "when": "activePanel == 'workbench.panel.markers'"
      },
      {
        "command": "workbench.action.closePanel",
        "key": "ctrl+e o",
        "mac": "cmd+e o",
        "when": "activePanel == 'workbench.panel.output'"
      },
      {
        "command": "workbench.action.closePanel",
        "key": "ctrl+l c",
        "mac": "cmd+l c"
      },
      {
        "command": "workbench.action.closePanel",
        "key": "ctrl+s s",
        "mac": "cmd+s s",
        "when": "focusedView == 'workbench.view.search'"
      },
      {
        "key": "ctrl+b shift+d",
        "mac": "cmd+b shift+d",
        "command": "workbench.action.closeUnmodifiedEditors"
      },
      {
        "command": "workbench.action.closeWindow",
        "key": "ctrl+b d",
        "mac": "cmd+b d",
        "when": "!editorIsOpen && !multipleEditorGroups"
      },
      {
        "command": "workbench.action.configureLanguageBasedSettings",
        "key": "ctrl+, l",
        "mac": "cmd+, l"
      },
      {
        "command": "workbench.action.debug.continue",
        "key": "ctrl+d c",
        "mac": "cmd+d c",
        "when": "inDebugMode"
      },
      {
        "command": "workbench.action.debug.restart",
        "key": "ctrl+d shift+d",
        "mac": "cmd+d shift+d"
      },
      {
        "command": "workbench.action.debug.run",
        "key": "ctrl+d r",
        "mac": "cmd+d r",
        "when": "!inDebugMode && !terminalFocus"
      },
      {
        "command": "workbench.action.debug.start",
        "key": "ctrl+d d",
        "mac": "cmd+d d",
        "when": "!inDebugMode"
      },
      {
        "command": "workbench.action.debug.stepInto",
        "key": "ctrl+d j",
        "mac": "cmd+d j",
        "when": "inDebugMode"
      },
      {
        "command": "workbench.action.debug.stepOut",
        "key": "ctrl+d shift+o",
        "mac": "cmd+d shift+o",
        "when": "inDebugMode"
      },
      {
        "command": "workbench.action.debug.stepOver",
        "key": "ctrl+d n",
        "mac": "cmd+d n",
        "when": "inDebugMode"
      },
      {
        "command": "workbench.action.debug.stepOver",
        "key": "ctrl+d n",
        "mac": "cmd+d n",
        "when": "debugState == 'stopped'"
      },
      {
        "key": "ctrl+q d",
        "mac": "cmd+q d",
        "command": "workbench.action.debug.stop"
      },
      {
        "command": "workbench.action.editor.changeLanguageMode",
        "key": "ctrl+f l",
        "mac": "cmd+f l"
      },
      {
        "key": "ctrl+y p",
        "mac": "cmd+y p",
        "command": "workbench.action.files.copyPathOfActiveFile"
      },
      {
        "key": "ctrl+b s",
        "mac": "cmd+b s",
        "command": "workbench.action.files.newUntitledFile"
      },
      {
        "key": "ctrl+f u",
        "mac": "cmd+f u",
        "command": "workbench.action.files.newUntitledFile"
      },
      {
        "key": "ctrl+w t",
        "mac": "cmd+w t",
        "command": "workbench.action.files.newUntitledFile"
      },
      {
        "key": "ctrl+o f",
        "mac": "cmd+o f",
        "command": "workbench.action.files.openFileFolder"
      },
      {
        "command": "workbench.action.files.save",
        "key": "ctrl+s",
        "mac": "ctrl+s"
      },
      {
        "command": "workbench.action.files.save",
        "key": "ctrl+s",
        "mac": "ctrl+s"
      },
      {
        "command": "workbench.action.files.saveWithoutFormatting",
        "key": "ctrl+f s",
        "mac": "cmd+f s"
      },
      {
        "command": "workbench.action.findInFiles",
        "key": "ctrl+f g",
        "mac": "cmd+f g"
      },
      {
        "command": "workbench.action.findInFiles",
        "key": "ctrl+s l",
        "mac": "cmd+s l"
      },
      {
        "command": "workbench.action.findInFiles",
        "key": "ctrl+s p",
        "mac": "cmd+s p"
      },
      {
        "command": "workbench.action.findInFiles",
        "key": "ctrl+s s",
        "mac": "cmd+s s"
      },
      {
        "command": "workbench.action.firstEditorInGroup",
        "key": "ctrl+w 1",
        "mac": "cmd+w 1"
      },
      {
        "command": "workbench.action.focusAboveGroup",
        "key": "ctrl+w k",
        "mac": "cmd+w k"
      },
      {
        "command": "workbench.action.focusAboveGroup",
        "key": "ctrl+w up",
        "mac": "cmd+w up"
      },
      {
        "command": "workbench.action.focusBelowGroup",
        "key": "ctrl+w down",
        "mac": "cmd+w down"
      },
      {
        "command": "workbench.action.focusBelowGroup",
        "key": "ctrl+w j",
        "mac": "cmd+w j"
      },
      {
        "command": "workbench.action.focusFirstEditorGroup",
        "key": "ctrl+w shift+h",
        "mac": "cmd+w shift+h"
      },
      {
        "command": "workbench.action.focusFirstEditorGroup",
        "key": "ctrl+w shift+k",
        "mac": "cmd+w shift+k"
      },
      {
        "command": "workbench.action.focusLastEditorGroup",
        "key": "ctrl+w shift+j",
        "mac": "cmd+w shift+j"
      },
      {
        "command": "workbench.action.focusLastEditorGroup",
        "key": "ctrl+w shift+l",
        "mac": "cmd+w shift+l"
      },
      {
        "command": "workbench.action.focusNextGroup",
        "key": "tab",
        "when": "editorFocus && vim.mode == 'Normal'"
      },
      {
        "command": "workbench.action.focusSideBar",
        "key": "tab",
        "when": "editorFocus && vim.mode == 'Normal' && activeEditorGroupLast && sideBarVisible"
      },
      {
        "command": "workbench.action.focusPreviousGroup",
        "key": "shift+tab",
        "when": "editorFocus && vim.mode == 'Normal' && activeEditorGroupIndex != 1"
      },
      {
        "command": "workbench.action.focusSideBar",
        "key": "shift+tab",
        "when": "editorFocus && vim.mode == 'Normal' && activeEditorGroupIndex == 1"
      },
      {
        "command": "workbench.action.focusNextGroup",
        "key": "ctrl+w l",
        "mac": "cmd+w l",
        "when": "editorFocus"
      },
      {
        "command": "workbench.action.focusNextGroup",
        "key": "ctrl+w right",
        "mac": "cmd+w right",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+l f",
        "mac": "cmd+l f",
        "command": "workbench.action.focusPanel"
      },
      {
        "command": "workbench.action.focusPreviousGroup",
        "key": "ctrl+w h",
        "mac": "cmd+w h",
        "when": "editorFocus"
      },
      {
        "command": "workbench.action.focusPreviousGroup",
        "key": "ctrl+w left",
        "mac": "cmd+w left",
        "when": "editorFocus"
      },
      {
        "command": "workbench.action.gotoMethod",
        "key": "ctrl+j m",
        "mac": "cmd+j m"
      },
      {
        "command": "workbench.action.gotoSymbol",
        "key": "ctrl+j e",
        "mac": "cmd+j e"
      },
      {
        "command": "workbench.action.lastEditorInGroup",
        "key": "ctrl+w 9",
        "mac": "cmd+w 9"
      },
      {
        "key": "ctrl+w shift+down",
        "mac": "cmd+w shift+down",
        "command": "workbench.action.moveActiveEditorGroupDown"
      },
      {
        "key": "ctrl+w shift+left",
        "mac": "cmd+w shift+left",
        "command": "workbench.action.moveActiveEditorGroupLeft"
      },
      {
        "key": "ctrl+w shift+right",
        "mac": "cmd+w shift+right",
        "command": "workbench.action.moveActiveEditorGroupRight"
      },
      {
        "key": "ctrl+w shift+up",
        "mac": "cmd+w shift+up",
        "command": "workbench.action.moveActiveEditorGroupUp"
      },
      {
        "key": "ctrl+w shift+ctrl+left",
        "mac": "cmd+w shift+cmd+left",
        "command": "workbench.action.moveEditorLeftInGroup"
      },
      {
        "key": "ctrl+w shift+ctrl+right",
        "mac": "cmd+w shift+cmd+right",
        "command": "workbench.action.moveEditorRightInGroup"
      },
      {
        "command": "workbench.action.navigateBack",
        "key": "ctrl+[",
        "mac": "cmd+["
      },
      {
        "command": "workbench.action.navigateForward",
        "key": "ctrl+]",
        "mac": "cmd+]"
      },
      {
        "command": "workbench.action.newWindow",
        "key": "ctrl+w n",
        "mac": "cmd+w n"
      },
      {
        "command": "workbench.action.nextEditor",
        "key": "ctrl+b n",
        "mac": "cmd+b n"
      },
      {
        "key": "ctrl+w alt+ctrl+right",
        "mac": "cmd+w alt+cmd+right",
        "command": "workbench.action.nextEditorInGroup"
      },
      {
        "key": "ctrl+l tab",
        "mac": "cmd+l tab",
        "command": "workbench.action.nextPanelView"
      },
      {
        "command": "workbench.action.openDocumentationUrl",
        "key": "ctrl+h d",
        "mac": "cmd+h d"
      },
      {
        "command": "workbench.action.openGlobalKeybindings",
        "key": "ctrl+, k",
        "mac": "cmd+, k"
      },
      {
        "command": "workbench.action.openGlobalKeybindingsFile",
        "key": "ctrl+, shift+k",
        "mac": "cmd+, shift+k"
      },
      {
        "command": "workbench.action.openGlobalSettings",
        "key": "ctrl+, ,",
        "mac": "cmd+, ,"
      },
      {
        "command": "workbench.action.openRecent",
        "key": "ctrl+f e",
        "mac": "cmd+f e"
      },
      {
        "command": "workbench.action.openRequestFeatureUrl",
        "key": "ctrl+h s",
        "mac": "cmd+h s"
      },
      {
        "command": "workbench.action.openSettingsJson",
        "key": "ctrl+, s",
        "mac": "cmd+, s"
      },
      {
        "command": "workbench.action.openSnippets",
        "key": "ctrl+, n",
        "mac": "cmd+, n"
      },
      {
        "command": "workbench.action.paceSettings",
        "key": "ctrl+, w",
        "mac": "cmd+, w"
      },
      {
        "command": "workbench.action.output.toggleOutput",
        "key": "ctrl+e o",
        "mac": "cmd+e o"
      },
      {
        "command": "workbench.action.previousEditor",
        "key": "ctrl+b p",
        "mac": "cmd+b p"
      },
      {
        "key": "ctrl+w alt+ctrl+left",
        "mac": "cmd+w alt+cmd+left",
        "command": "workbench.action.previousEditorInGroup"
      },
      {
        "key": "ctrl+l shift+tab",
        "mac": "cmd+l shift+tab",
        "command": "workbench.action.previousPanelView"
      },
      {
        "command": "workbench.action.problems.focus",
        "key": "ctrl+e l",
        "mac": "cmd+e l"
      },
      {
        "command": "workbench.action.quickOpen",
        "key": "ctrl+b b",
        "mac": "cmd+b b"
      },
      {
        "command": "workbench.action.quickOpen",
        "key": "ctrl+f f",
        "mac": "cmd+f f"
      },
      {
        "command": "workbench.action.quickOpen",
        "key": "ctrl+p f",
        "mac": "cmd+p f"
      },
      {
        "command": "workbench.action.quickOpenSelectPrevious",
        "key": "ctrl+k",
        "mac": "ctrl+k",
        "when": "inQuickOpen"
      },
      {
        "command": "workbench.action.quickSwitchWindow",
        "key": "ctrl+w o",
        "mac": "cmd+w o"
      },
      {
        "command": "workbench.action.quit",
        "key": "ctrl+q ctrl+q",
        "mac": "cmd+q cmd+q"
      },
      {
        "command": "workbench.action.reopenClosedEditor",
        "key": "ctrl+b u",
        "mac": "cmd+b u"
      },
      {
        "command": "workbench.action.reopenClosedEditor",
        "key": "ctrl+w shift+t",
        "mac": "cmd+w shift+t"
      },
      {
        "command": "workbench.action.replaceInFiles",
        "key": "ctrl+p shift+r",
        "mac": "cmd+p shift+r"
      },
      {
        "command": "workbench.action.replaceInFiles",
        "key": "ctrl+r shift+s",
        "mac": "cmd+r shift+s"
      },
      {
        "command": "workbench.action.replaceInFiles",
        "key": "ctrl+s shift+r",
        "mac": "cmd+s shift+r"
      },
      {
        "command": "workbench.action.selectIconTheme",
        "key": "ctrl+, i",
        "mac": "cmd+, i"
      },
      {
        "command": "workbench.action.selectTheme",
        "key": "ctrl+, t",
        "mac": "cmd+, t"
      },
      {
        "command": "workbench.action.showAllSymbols",
        "key": "ctrl+j s",
        "mac": "cmd+j s"
      },
      {
        "command": "workbench.action.showCommands",
        "key": "ctrl+space",
        "mac": "ctrl+space"
      },
      {
        "command": "workbench.action.showInteractivePlayground",
        "key": "ctrl+h p",
        "mac": "cmd+h p"
      },
      {
        "command": "workbench.action.splitEditor",
        "key": "ctrl+w /",
        "mac": "cmd+w /"
      },
      {
        "command": "workbench.action.splitEditor",
        "key": "ctrl+w v",
        "mac": "cmd+w v"
      },
      {
        "command": "workbench.action.splitEditorDown",
        "key": "ctrl+w -",
        "mac": "cmd+w -"
      },
      {
        "command": "workbench.action.splitEditorDown",
        "key": "ctrl+w s",
        "mac": "cmd+w s"
      },
      {
        "command": "workbench.action.terminal.focus",
        "key": "ctrl+'",
        "mac": "cmd+'"
      },
      {
        "command": "workbench.action.terminal.focusFindWidget",
        "key": "ctrl+s f",
        "mac": "cmd+s f",
        "when": "terminalFocus"
      },
      {
        "command": "workbench.action.terminal.focusFindWidget",
        "key": "ctrl+s f",
        "mac": "cmd+s f",
        "when": "terminalFindWidgetFocused"
      },
      {
        "command": "workbench.action.terminal.resizePaneLeft",
        "key": "ctrl+l left",
        "mac": "cmd+l left",
        "when": "terminalFocus"
      },
      {
        "command": "workbench.action.terminal.runSelectedText",
        "key": "ctrl+shift+alt+t",
        "mac": "ctrl+shift+alt+t"
      },
      {
        "command": "workbench.action.terminal.split",
        "key": "ctrl+w /",
        "mac": "cmd+w /",
        "when": "terminalFocus"
      },
      {
        "command": "workbench.action.terminal.split",
        "key": "ctrl+w v",
        "mac": "cmd+w v",
        "when": "terminalFocus"
      },
      {
        "command": "workbench.action.terminal.toggleFindRegex",
        "key": "ctrl+f r",
        "mac": "cmd+f r",
        "when": "terminalFindWidgetFocused"
      },
      {
        "command": "workbench.action.terminal.toggleFindRegex",
        "key": "ctrl+f r",
        "mac": "cmd+f r",
        "when": "terminalFocus"
      },
      {
        "command": "workbench.action.terminal.toggleTerminal",
        "key": "ctrl+'",
        "mac": "ctrl+'"
      },
      {
        "key": "ctrl+t f",
        "mac": "cmd+t f",
        "command": "workbench.action.toggleFullScreen"
      },
      {
        "key": "ctrl+l m",
        "mac": "cmd+l m",
        "command": "workbench.action.toggleMaximizedPanel"
      },
      {
        "command": "workbench.action.togglePanel",
        "key": "ctrl+l t",
        "mac": "cmd+l t"
      },
      {
        "command": "workbench.action.togglePanel",
        "key": "ctrl+o l",
        "mac": "cmd+o l"
      },
      {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "ctrl+w s",
        "mac": "cmd+w s"
      },
      {
        "key": "ctrl+t z",
        "mac": "cmd+t z",
        "command": "workbench.action.toggleZenMode"
      },
      {
        "command": "workbench.debug.action.focusBreakpointsView",
        "key": "ctrl+d shift+b",
        "mac": "cmd+d shift+b"
      },
      {
        "command": "workbench.debug.action.toggleRepl",
        "key": "ctrl+d l",
        "mac": "cmd+d l"
      },
      {
        "command": "workbench.debug.viewlet.action.removeAllBreakpoints",
        "key": "ctrl+d shift+c",
        "mac": "cmd+d shift+c"
      },
      {
        "command": "workbench.explorer.fileView.focus",
        "key": "ctrl+s e",
        "mac": "cmd+s e"
      },
      {
        "command": "workbench.extensions.action.showRecommendedKeymapExtensions",
        "key": "ctrl+, m",
        "mac": "cmd+, m"
      },
      {
        "key": "ctrl+f c",
        "mac": "cmd+f c",
        "command": "workbench.files.action.compareWithClipboard"
      },
      {
        "command": "workbench.files.action.showActiveFileInExplorer",
        "key": "ctrl+f shift+s",
        "mac": "cmd+f shift+s"
      },
      {
        "key": "ctrl+l p",
        "mac": "cmd+l p",
        "command": "workbench.panel.markers.view.focus"
      },
      {
        "command": "workbench.view.debug",
        "key": "ctrl+d o",
        "mac": "cmd+d o"
      },
      {
        "command": "workbench.view.explorer",
        "key": "ctrl+f t",
        "mac": "cmd+f t"
      },
      {
        "command": "workbench.view.explorer",
        "key": "ctrl+f t",
        "mac": "cmd+f t",
        "when": "sideBarVisible && !explorerViewletVisible"
      },
      {
        "command": "workbench.view.explorer",
        "key": "ctrl+o e",
        "mac": "cmd+o e"
      },
      {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "ctrl+f t",
        "mac": "cmd+f t",
        "when": "sideBarVisible && explorerViewletVisible"
      },
      {
        "command": "workbench.view.extension.github-pull-requests",
        "key": "ctrl+o p",
        "mac": "cmd+o p"
      },
      {
        "command": "workbench.view.extension.project-manager",
        "key": "ctrl+o shift+p",
        "mac": "cmd+o shift+p"
      },
      {
        "command": "workbench.view.extension.todo-tree-container",
        "key": "ctrl+o t",
        "mac": "cmd+o t"
      },
      {
        "command": "workbench.view.extensions",
        "key": "ctrl+o x",
        "mac": "cmd+o x"
      },
      {
        "command": "workbench.view.scm",
        "key": "ctrl+g s",
        "mac": "cmd+g s"
      },
      {
        "key": "ctrl+tab",
        "mac": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
      },
      {
        "key": "ctrl+shift+tab",
        "mac": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
      },
      {
        "key": "ctrl+tab",
        "mac": "ctrl+tab",
        "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
      },
      {
        "key": "ctrl+shift+tab",
        "mac": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
      },
      {
        "key": "alt+ctrl+tab",
        "mac": "alt+cmd+tab",
        "command": "-workbench.action.showAllEditors"
      },
      {
        "key": "ctrl+w tab",
        "mac": "cmd+w tab",
        "command": "workbench.action.focusNextGroup"
      },
      {
        "key": "ctrl+w shift+tab",
        "mac": "cmd+w shift+tab",
        "command": "workbench.action.focusPreviousGroup"
      },
      {
        "key": "shift+alt+up",
        "mac": "shift+alt+up",
        "command": "editor.action.moveLinesUpAction"
      },
      {
        "key": "shift+alt+down",
        "mac": "shift+alt+down",
        "command": "editor.action.moveLinesDownAction"
      },
      {
        "key": "ctrl+g o",
        "mac": "cmd+g o",
        "command": "extension.openInGitHub"
      },
      {
        "key": "ctrl+l g",
        "mac": "ctrl+l g",
        "command": "-extension.openInGitHub"
      },
      {
        "key": "ctrl+g shift+o",
        "mac": "cmd+g shift+o",
        "command": "extension.openPrGitProvider"
      },
      {
        "key": "ctrl+l p",
        "mac": "ctrl+l p",
        "command": "-extension.openPrGitProvider"
      },
      {
        "key": "ctrl+tab",
        "mac": "ctrl+tab",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
      },
      {
        "key": "tab",
        "mac": "tab",
        "command": "-markdown.extension.onTabKey",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "key": "shift+tab",
        "mac": "shift+tab",
        "command": "-markdown.extension.onShiftTabKey",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
      },
      {
        "command": "list.focusDown",
        "key": "ctrl+tab",
        "mac": "ctrl+tab",
        "when": "listFocus && !inputFocus"
      },
      {
        "command": "list.focusUp",
        "key": "ctrl+shift+tab",
        "mac": "ctrl+shift+tab",
        "when": "listFocus && !inputFocus"
      },
      {
        "key": "shift+alt+a",
        "mac": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "shift+alt+a",
        "mac": "shift+alt+a",
        "command": "extension.switchDay"
      },
      {
        "key": "shift+alt+d",
        "mac": "shift+alt+d",
        "command": "extension.switchNight"
      },
      {
        "key": "shift+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm'"
      },
      {
        "key": "shift+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.debug'"
      },
      {
        "key": "shift+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extensions'"
      },
      {
        "key": "tab",
        "mac": "tab",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm'"
      },
      {
        "key": "tab",
        "mac": "tab",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.debug'"
      },
      {
        "key": "tab",
        "mac": "tab",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extensions'"
      },
      {
        "key": "ctrl+o d",
        "mac": "cmd+o d",
        "command": "workbench.view.extension.dockerView"
      },
      {
        "key": "ctrl+j",
        "mac": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
      },
      {
        "key": "ctrl+shift+j",
        "mac": "ctrl+shift+j",
        "command": "-rust-analyzer.joinLines",
        "when": "editorTextFocus && editorLangId == 'rust'"
      },
      {
        "key": "shift+ctrl+.",
        "mac": "shift+cmd+.",
        "command": "workbench.action.increaseViewSize"
      },
      {
        "key": "shift+ctrl+,",
        "mac": "shift+cmd+,",
        "command": "workbench.action.decreaseViewSize"
      },
      {
        "key": "shift+ctrl+,",
        "mac": "shift+cmd+,",
        "command": "-editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "shift+ctrl+.",
        "mac": "shift+cmd+.",
        "command": "-breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible"
      },
      {
        "key": "shift+ctrl+.",
        "mac": "shift+cmd+.",
        "command": "-editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "shift+ctrl+.",
        "mac": "shift+cmd+.",
        "command": "-breadcrumbs.toggleToOn",
        "when": "!config.breadcrumbs.enabled"
      },
      {
        "key": "ctrl+w r",
        "mac": "cmd+w r",
        "command": "workbench.action.evenEditorWidths"
      },
      {
        "key": "f4",
        "mac": "f4",
        "command": "-search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
      },
      {
        "key": "ctrl+n",
        "mac": "ctrl+n",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+p",
        "mac": "ctrl+p",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+n",
        "mac": "ctrl+n",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "isInDiffEditor"
      },
      {
        "key": "ctrl+p",
        "mac": "ctrl+p",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "isInDiffEditor"
      },
      {
        "key": "ctrl+w ctrl+w",
        "mac": "cmd+w cmd+w",
        "command": "workbench.action.closeWindow"
      },
      {
        "key": "shift+ctrl+w",
        "mac": "shift+cmd+w",
        "command": "-workbench.action.closeWindow"
      },
      {
        "key": "ctrl+m m",
        "mac": "cmd+m m",
        "command": "markdown.extension.editing.toggleMath",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+m",
        "mac": "cmd+m",
        "command": "-markdown.extension.editing.toggleMath",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+m c",
        "mac": "cmd+m c",
        "command": "markdown.extension.checkTaskList",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
      },
      {
        "key": "alt+c",
        "command": "-markdown.extension.checkTaskList",
        "when": "editorTextFocus && editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+m b",
        "mac": "cmd+m b",
        "command": "markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+b",
        "mac": "cmd+b",
        "command": "-markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+m i",
        "mac": "cmd+m i",
        "command": "markdown.extension.editing.toggleItalic",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+i",
        "mac": "cmd+i",
        "command": "-markdown.extension.editing.toggleItalic",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+m s",
        "mac": "cmd+m s",
        "command": "markdown.extension.editing.toggleStrikethrough",
        "when": "editorTextFocus && !editorReadonly && !isMac && editorLangId == 'markdown'"
      },
      {
        "key": "alt+s",
        "command": "-markdown.extension.editing.toggleStrikethrough",
        "when": "editorTextFocus && !editorReadonly && !isMac && editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+m shift+`",
        "mac": "cmd+m shift+`",
        "command": "markdown.extension.editing.toggleCodeBlock",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+m `",
        "mac": "cmd+m `",
        "command": "markdown.extension.editing.toggleCodeSpan",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+m l",
        "mac": "cmd+m l",
        "command": "markdown.extension.editing.toggleList",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+w ctrl+r",
        "mac": "cmd+w cmd+r",
        "command": "workbench.action.reloadWindow"
      },
      {
        "mac": "cmd+r",
        "key": "ctrl+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
      },
      {
        "key": "ctrl+w shift+ctrl+r",
        "mac": "cmd+w shift+cmd+r",
        "command": "workbench.action.reloadWindowWithExtensionsDisabled"
      },
      {
        "key": "ctrl+c ctrl+c",
        "mac": "cmd+c cmd+c",
        "command": "editor.action.clipboardCopyAction",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+c ctrl+c",
        "mac": "cmd+c cmd+c",
        "command": "editor.action.webvieweditor.copy",
        "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
      },
      {
        "key": "ctrl+c ctrl+c",
        "mac": "cmd+c cmd+c",
        "command": "execCopy"
      },
      {
        "key": "ctrl+c ctrl+c",
        "mac": "cmd+c cmd+c",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
      },
      {
        "key": "ctrl+c ctrl+c",
        "mac": "cmd+c cmd+c",
        "command": "gitlens.views.compare.copy",
        "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.compare/"
      },
      {
        "key": "ctrl+c ctrl+c",
        "mac": "cmd+c cmd+c",
        "command": "gitlens.views.fileHistory.copy",
        "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.fileHistory/"
      },
      {
        "key": "ctrl+c ctrl+c",
        "mac": "cmd+c cmd+c",
        "command": "gitlens.views.lineHistory.copy",
        "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.lineHistory/"
      },
      {
        "key": "ctrl+c ctrl+c",
        "mac": "cmd+c cmd+c",
        "command": "gitlens.views.repositories.copy",
        "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.repositories/"
      },
      {
        "key": "ctrl+c ctrl+c",
        "mac": "cmd+c cmd+c",
        "command": "-gitlens.views.search.copy",
        "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.search/"
      },
      {
        "key": "ctrl+c ctrl+c",
        "mac": "cmd+c cmd+c",
        "command": "-keybindings.editor.copyKeybindingEntry",
        "when": "inKeybindings && keybindingFocus"
      },
      {
        "key": "ctrl+c ctrl+c",
        "mac": "cmd+c cmd+c",
        "command": "problems.action.copy",
        "when": "problemFocus"
      },
      {
        "key": "ctrl+c ctrl+c",
        "mac": "cmd+c cmd+c",
        "command": "remote.tunnel.copyAddressInline",
        "when": "tunnelViewFocus && tunnelType == 'Detected' || tunnelViewFocus && tunnelType == 'Forwarded'"
      },
      {
        "command": "search.action.copyMatch",
        "key": "ctrl+c ctrl+c",
        "mac": "cmd+c cmd+c",
        "when": "fileMatchOrMatchFocus"
      },
      {
        "key": "ctrl+c ctrl+c",
        "mac": "cmd+c cmd+c",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalTextSelected"
      },
      {
        "key": "shift+cmd+l",
        "command": "-selectAllSearchEditorMatches",
        "when": "inSearchEditor"
      },
      {
        "key": "shift+cmd+l",
        "command": "-addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
      },
      {
        "command": "actions.find",
        "key": "ctrl+f ctrl+f",
        "mac": "cmd+f cmd+f"
      },
      {
        "command": "editor.action.extensioneditor.showfind",
        "key": "ctrl+f ctrl+f",
        "mac": "cmd+f cmd+f",
        "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
      },
      {
        "command": "editor.action.webvieweditor.showFind",
        "key": "ctrl+f ctrl+f",
        "mac": "cmd+f cmd+f",
        "when": "!editorFocus && activeEditor == 'WebviewEditor'"
      },
      {
        "command": "keybindings.editor.searchKeybindings",
        "key": "ctrl+f ctrl+f",
        "mac": "cmd+f cmd+f",
        "when": "inKeybindings"
      },
      {
        "command": "problems.action.focusFilter",
        "key": "ctrl+f ctrl+f",
        "mac": "cmd+f cmd+f",
        "when": "problemsViewFocus"
      },
      {
        "command": "settings.action.search",
        "key": "ctrl+f ctrl+f",
        "mac": "cmd+f cmd+f",
        "when": "inSettingsEditor"
      },
      {
        "command": "workbench.action.terminal.focusFindWidget",
        "key": "ctrl+f ctrl+f",
        "mac": "cmd+f cmd+f",
        "when": "terminalFocus"
      },
      {
        "command": "workbench.action.terminal.focusFindWidget",
        "key": "ctrl+f ctrl+f",
        "mac": "cmd+f cmd+f",
        "when": "terminalFindWidgetFocused"
      },
      {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "ctrl+b ctrl+b",
        "mac": "cmd+b cmd+b"
      },
      {
        "command": "editor.action.copyLinesDownAction",
        "mac": "cmd+d cmd+d",
        "key": "ctrl+d ctrl+d",
        "when": "editorTextFocus && !editorHasSelection && !editorReadonly"
      },
      {
        "command": "editor.action.addSelectionToNextFindMatch",
        "mac": "cmd+d cmd+d",
        "key": "ctrl+d ctrl+d",
        "when": "editorFocus"
      },
      {
        "command": "workbench.action.openRecent",
        "key": "ctrl+e ctrl+e",
        "mac": "cmd+e cmd+e"
      },
      {
        "command": "workbench.action.togglePanel",
        "key": "ctrl+j ctrl+j",
        "mac": "cmd+j cmd+j"
      },
      {
        "command": "workbench.action.gotoLine",
        "key": "ctrl+l ctrl+l",
        "mac": "cmd+l cmd+l"
      },
      {
        "command": "expandLineSelection",
        "key": "ctrl+l ctrl+l",
        "mac": "cmd+l cmd+l",
        "when": "textInputFocus"
      },
      {
        "mac": "cmd+r cmd+r",
        "key": "ctrl+r ctrl+r",
        "command": "workbench.action.reloadWindow",
        "when": "isDevelopment"
      },
      {
        "command": "editor.action.startFindReplaceAction",
        "key": "ctrl+r ctrl+r",
        "mac": "cmd+r cmd+r"
      },
      {
        "command": "workbench.action.files.save",
        "key": "ctrl+s ctrl+s",
        "mac": "cmd+s cmd+s"
      },
      {
        "mac": "cmd+, u",
        "key": "ctrl+, u",
        "command": "extension.updateSettings"
      },
      {
        "key": "alt+b",
        "command": "-extension.setBrowserScope"
      },
      {
        "key": "alt+b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
      },
      {
        "mac": "alt+cmd+g b",
        "key": "alt+ctrl+g b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
      },
      {
        "mac": "cmd+g cmd+b",
        "key": "ctrl+g ctrl+b",
        "command": "gitlens.toggleFileBlame"
      },
      {
        "mac": "cmd+o k",
        "key": "ctrl+o k",
        "command": "workbench.view.extension.kubernetesView"
      },
      {
        "key": "ctrl+a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !editorTextFocus"
      },
      {
        "key": "ctrl+d",
        "command": "fileutils.removeFile",
        "when": "filesExplorerFocus && !editorTextFocus"
      },
      {
        "key": "cmd+0",
        "command": "-workbench.action.focusSideBar"
      },
      {
        "key": "ctrl+y n",
        "command": "fileutils.copyFileName",
        "when": "filesExplorerFocus && !editorTextFocus"
      },
      {
        "key": "ctrl+y p",
        "command": "copyFilePath",
        "when": "filesExplorerFocus && !editorTextFocus"
      },
      {
        "mac": "cmd+o s",
        "key": "ctrl+o s",
        "command": "workbench.action.toggleSidebarVisibility"
      },
      {
        "mac": "cmd+o m",
        "key": "ctrl+o m",
        "command": "workbench.view.extension.mongoDB"
      },
      {
        "key": "tab",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.github-pull-requests'"
      },
      {
        "key": "shift+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.github-pull-requests'"
      },
      {
        "key": "tab",
        "command": "workbench.action.focusNextGroup",
        "when": "inKeybindings"
      },
      {
        "key": "shift+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "inKeybindings"
      },
      {
        "command": "workbench.action.focusSideBar",
        "key": "tab",
        "when": "inKeybindings && activeEditorGroupLast && sideBarVisible"
      },
      {
        "command": "workbench.action.focusLastEditorGroup",
        "key": "shift+tab",
        "when": "inKeybindings && activeEditorGroupLast && !sideBarVisible"
      },
      {
        "command": "workbench.action.focusSideBar",
        "key": "shift+tab",
        "when": "inKeybindings && activeEditorGroupIndex == 1 && sideBarVisible"
      },
      {
        "key": "tab",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.bookmarks'"
      },
      {
        "key": "shift+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.bookmarks'"
      },
      {
        "key": "tab",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.gistpad'"
      },
      {
        "key": "shift+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.gistpad'"
      },
      {
        "key": "tab",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.todo-tree-container'"
      },
      {
        "key": "shift+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.todo-tree-container'"
      },
      {
        "key": "tab",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.project-manager'"
      },
      {
        "key": "shift+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.project-manager'"
      },
      {
        "key": "tab",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.dockerView'"
      },
      {
        "key": "shift+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.dockerView'"
      },
      {
        "key": "tab",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.kubernetesView'"
      },
      {
        "key": "shift+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.kubernetesView'"
      },
      {
        "key": "tab",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.mongoDB'"
      },
      {
        "key": "shift+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.mongoDB'"
      },
      {
        "key": "ctrl+shift+l",
        "command": "editor.action.openLink"
      }
    ]
  }
}
